type Query {
  user(id: String!): User!
  users: [User]!
  friend(id: ID!):Friend!
  friends:[Friend]! 
  friendslist(authorId: String!):[Friend]!
}
type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  addfriend(friendId: ID!,defaultName: String!,authorId: ID!): Friend!
  friendupdate(id: ID!, permission: Boolean!):Friend!
}
type AuthPayload {
  token: String
  user: User
}
type User {
  id: ID!
  name: String!
  email: String!
  friends:[Friend!]!
}

type Friend{
  id: ID!
  name: String
  defaultName: String!
  friendId: String!
  author: User!
  chatRoomId: String!
  permission: Boolean!
}